{
  "message": "TypeError: range() integer end argument expected, got list.",
  "traceback": ["py_call_impl(callable, dots$args, dots$keywords)", "(structure(function (...) \n{\n    dots <- py_resolve_dots(list(...))\n    result <- py_call_impl(callable, dots$args, dots$keywords)\n    if (convert) {\n        result <- py_to_r(result)\n        if (is.null(result)) \n            invisible(result)\n        else result\n    }\n    else {\n        result\n    }\n}, class = c(\"python.builtin.instancemethod\", \"python.builtin.object\"\n), py_object = <environment>))(batch_size = 128L, epochs = integer(0), \n    verbose = 1L, callbacks = list(<environment>, <environment>), \n    validation_split = 0.2, shuffle = TRUE, class_weight = NULL, \n    sample_weight = NULL, initial_epoch = 0L, x = <environment>, \n    y = <environment>)", "do.call(object$fit, args)", "fit(., x_train, y_train, batch_size = batch_size, epochs = FLAGS$epochs, \n    verbose = 1, validation_split = 0.2)", "function_list[[k]](value)", "withVisible(function_list[[k]](value))", "freduce(value, `_function_list`)", "`_fseq`(`_lhs`)", "eval(quote(`_fseq`(`_lhs`)), env, env)", "eval(quote(`_fseq`(`_lhs`)), env, env)", "withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))", "model %>% fit(x_train, y_train, batch_size = batch_size, epochs = FLAGS$epochs, \n    verbose = 1, validation_split = 0.2)", "eval(ei, envir)", "eval(ei, envir)", "tfruns::training_run(\"mnist_mlp_FLAGS.R\", flags = list(dense_units1 = dense_units1))"]
}
